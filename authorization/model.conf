[request_definition]
r = sub, channel, quality, act

[policy_definition]
p = channel, quality, act, max_concurrent_no, sub_rule, eft

# Effect = check if there is any explicit deny
[policy_effect]
e = !some(where (p.eft == deny))

# eval(p.sub_rule) - this matcher is used to check any Condition from channel policy except "ConcurrencyLimit"
# for "ConcurrencyLimit" condition custom function is used: checkConcurrencyLimit. It calls session service only if p.concurrency != 'inf'
[matchers]
m = r.channel == p.channel \
    && r.quality == p.quality \
    && r.act == p.act \
    && eval(p.sub_rule) \
    && checkConcurrencyLimit(p.max_concurrent_no, r.sub, p.sub_rule)